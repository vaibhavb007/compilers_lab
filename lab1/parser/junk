    parse(): Parsing starts
    push(state 0)
    ==
    nextToken(): using 'SYMBOL'
    lookup(0, 'SYMBOL'): shift 5 ('SYMBOL' processed)
    push(state 5)
    ==
    nextToken(): using `:' (58)
    lookup(5, `:' (58)): shift 8 (`:' (58) processed)
    push(state 8)
    ==
    nextToken(): using '\x0a'
    lookup(8, '\x0a'): shift 19 ('\x0a' processed)
    push(state 19)
    ==
    lookup(19, '_UNDETERMINED_'): default reduction by rule 8
    executeAction(): of rule 8 ...
    ... action of rule 8 completed
    pop(3) from stack having size 4
    pop(): next state: 0, token: 'optional_label'
    reduce(): by rule 8 to N-terminal 'optional_label'
    ==
    lookup(0, 'optional_label'): shift 4 ('optional_label' processed)
    push(state 4)
    ==
    nextToken(): using 'MNEMONIC'
    lookup(4, 'MNEMONIC'): shift 7 ('MNEMONIC' processed)
    push(state 7)
    ==
    nextToken(): using 'REGISTER'
    lookup(7, 'REGISTER'): shift 13 ('REGISTER' processed)
    push(state 13)
    ==
    lookup(13, '_UNDETERMINED_'): default reduction by rule 11
    executeAction(): of rule 11 ...
    ... action of rule 11 completed
    pop(1) from stack having size 4
    pop(): next state: 7, token: 'register_exp'
    reduce(): by rule 11 to N-terminal 'register_exp'
    ==
    lookup(7, 'register_exp'): shift 11 ('register_exp' processed)
    push(state 11)
    ==
    lookup(11, '_UNDETERMINED_'): default reduction by rule 9
    executeAction(): of rule 9 ...
    ... action of rule 9 completed
    pop(1) from stack having size 4
    pop(): next state: 7, token: 'opnd'
    reduce(): by rule 9 to N-terminal 'opnd'
    ==
    lookup(7, 'opnd'): shift 10 ('opnd' processed)
    push(state 10)
    ==
    nextToken(): using '\x0a'
    lookup(10, '\x0a'): default reduction by rule 5
    executeAction(): of rule 5 ...
    ... action of rule 5 completed
    pop(3) from stack having size 4
    pop(): next state: 0, token: 'instruction'
    reduce(): by rule 5 to N-terminal 'instruction'
    ==
    lookup(0, 'instruction'): shift 3 ('instruction' processed)
    push(state 3)
    ==
    lookup(3, '\x0a'): default reduction by rule 2
    executeAction(): of rule 2 ...
    ... action of rule 2 completed
    pop(1) from stack having size 2
    pop(): next state: 0, token: 'instruction_list'
    reduce(): by rule 2 to N-terminal 'instruction_list'
    ==
    lookup(0, 'instruction_list'): shift 2 ('instruction_list' processed)
    push(state 2)
    ==
    lookup(2, '\x0a'): shift 6 ('\x0a' processed)
    push(state 6)
    ==
    nextToken(): using 'MNEMONIC'
    lookup(6, 'MNEMONIC'): default reduction by rule 7
    executeAction(): of rule 7 ...
    ... action of rule 7 completed
    pop(0) from stack having size 3
    pop(): next state: 6, token: 'optional_label'
    reduce(): by rule 7 to N-terminal 'optional_label'
    ==
    lookup(6, 'optional_label'): shift 4 ('optional_label' processed)
    push(state 4)
    ==
    lookup(4, 'MNEMONIC'): shift 7 ('MNEMONIC' processed)
    push(state 7)
    ==
    nextToken(): using 'REGISTER'
    lookup(7, 'REGISTER'): shift 13 ('REGISTER' processed)
    push(state 13)
    ==
    lookup(13, '_UNDETERMINED_'): default reduction by rule 11
    executeAction(): of rule 11 ...
    ... action of rule 11 completed
    pop(1) from stack having size 6
    pop(): next state: 7, token: 'register_exp'
    reduce(): by rule 11 to N-terminal 'register_exp'
    ==
    lookup(7, 'register_exp'): shift 11 ('register_exp' processed)
    push(state 11)
    ==
    lookup(11, '_UNDETERMINED_'): default reduction by rule 9
    executeAction(): of rule 9 ...
    ... action of rule 9 completed
    pop(1) from stack having size 6
    pop(): next state: 7, token: 'opnd'
    reduce(): by rule 9 to N-terminal 'opnd'
    ==
    lookup(7, 'opnd'): shift 10 ('opnd' processed)
    push(state 10)
    ==
    nextToken(): using `,' (44)
    lookup(10, `,' (44)): shift 20 (`,' (44) processed)
    push(state 20)
    ==
    nextToken(): using 'REGISTER'
    lookup(20, 'REGISTER'): shift 13 ('REGISTER' processed)
    push(state 13)
    ==
    lookup(13, '_UNDETERMINED_'): default reduction by rule 11
    executeAction(): of rule 11 ...
    ... action of rule 11 completed
    pop(1) from stack having size 8
    pop(): next state: 20, token: 'register_exp'
    reduce(): by rule 11 to N-terminal 'register_exp'
    ==
    lookup(20, 'register_exp'): shift 11 ('register_exp' processed)
    push(state 11)
    ==
    lookup(11, '_UNDETERMINED_'): default reduction by rule 9
    executeAction(): of rule 9 ...
    ... action of rule 9 completed
    pop(1) from stack having size 8
    pop(): next state: 20, token: 'opnd'
    reduce(): by rule 9 to N-terminal 'opnd'
    ==
    lookup(20, 'opnd'): shift 25 ('opnd' processed)
    push(state 25)
    ==
    lookup(25, '_UNDETERMINED_'): default reduction by rule 6
    executeAction(): of rule 6 ...
    ... action of rule 6 completed
    pop(5) from stack having size 8
    pop(): next state: 6, token: 'instruction'
    reduce(): by rule 6 to N-terminal 'instruction'
    ==
    lookup(6, 'instruction'): shift 9 ('instruction' processed)
    push(state 9)
    ==
    lookup(9, '_UNDETERMINED_'): default reduction by rule 3
    executeAction(): of rule 3 ...
    ... action of rule 3 completed
    pop(3) from stack having size 4
    pop(): next state: 0, token: 'instruction_list'
    reduce(): by rule 3 to N-terminal 'instruction_list'
    ==
    lookup(0, 'instruction_list'): shift 2 ('instruction_list' processed)
    push(state 2)
    ==
    nextToken(): using '\x0a'
    lookup(2, '\x0a'): shift 6 ('\x0a' processed)
    push(state 6)
    ==
    nextToken(): using 'MNEMONIC'
    lookup(6, 'MNEMONIC'): default reduction by rule 7
    executeAction(): of rule 7 ...
    ... action of rule 7 completed
    pop(0) from stack having size 3
    pop(): next state: 6, token: 'optional_label'
    reduce(): by rule 7 to N-terminal 'optional_label'
    ==
    lookup(6, 'optional_label'): shift 4 ('optional_label' processed)
    push(state 4)
    ==
    lookup(4, 'MNEMONIC'): shift 7 ('MNEMONIC' processed)
    push(state 7)
    ==
    nextToken(): using 'IMMNUMBER'
    lookup(7, 'IMMNUMBER'): shift 18 ('IMMNUMBER' processed)
    push(state 18)
    ==
    lookup(18, '_UNDETERMINED_'): default reduction by rule 17
    executeAction(): of rule 17 ...
    ... action of rule 17 completed
    pop(1) from stack having size 6
    pop(): next state: 7, token: 'exp'
    reduce(): by rule 17 to N-terminal 'exp'
    ==
    lookup(7, 'exp'): shift 12 ('exp' processed)
    push(state 12)
    ==
    lookup(12, '_UNDETERMINED_'): default reduction by rule 10
    executeAction(): of rule 10 ...
    ... action of rule 10 completed
    pop(1) from stack having size 6
    pop(): next state: 7, token: 'opnd'
    reduce(): by rule 10 to N-terminal 'opnd'
    ==
    lookup(7, 'opnd'): shift 10 ('opnd' processed)
    push(state 10)
    ==
    nextToken(): using `,' (44)
    lookup(10, `,' (44)): shift 20 (`,' (44) processed)
    push(state 20)
    ==
    nextToken(): using 'REGISTER'
    lookup(20, 'REGISTER'): shift 13 ('REGISTER' processed)
    push(state 13)
    ==
    lookup(13, '_UNDETERMINED_'): default reduction by rule 11
    executeAction(): of rule 11 ...
    ... action of rule 11 completed
    pop(1) from stack having size 8
    pop(): next state: 20, token: 'register_exp'
    reduce(): by rule 11 to N-terminal 'register_exp'
    ==
    lookup(20, 'register_exp'): shift 11 ('register_exp' processed)
    push(state 11)
    ==
    lookup(11, '_UNDETERMINED_'): default reduction by rule 9
    executeAction(): of rule 9 ...
    ... action of rule 9 completed
    pop(1) from stack having size 8
    pop(): next state: 20, token: 'opnd'
    reduce(): by rule 9 to N-terminal 'opnd'
    ==
    lookup(20, 'opnd'): shift 25 ('opnd' processed)
    push(state 25)
    ==
    lookup(25, '_UNDETERMINED_'): default reduction by rule 6
    executeAction(): of rule 6 ...
    ... action of rule 6 completed
    pop(5) from stack having size 8
    pop(): next state: 6, token: 'instruction'
    reduce(): by rule 6 to N-terminal 'instruction'
    ==
    lookup(6, 'instruction'): shift 9 ('instruction' processed)
    push(state 9)
    ==
    lookup(9, '_UNDETERMINED_'): default reduction by rule 3
    executeAction(): of rule 3 ...
    ... action of rule 3 completed
    pop(3) from stack having size 4
    pop(): next state: 0, token: 'instruction_list'
    reduce(): by rule 3 to N-terminal 'instruction_list'
    ==
    lookup(0, 'instruction_list'): shift 2 ('instruction_list' processed)
    push(state 2)
    ==
    nextToken(): using '\x0a'
    lookup(2, '\x0a'): shift 6 ('\x0a' processed)
    push(state 6)
    ==
    nextToken(): using 'MNEMONIC'
    lookup(6, 'MNEMONIC'): default reduction by rule 7
    executeAction(): of rule 7 ...
    ... action of rule 7 completed
    pop(0) from stack having size 3
    pop(): next state: 6, token: 'optional_label'
    reduce(): by rule 7 to N-terminal 'optional_label'
    ==
    lookup(6, 'optional_label'): shift 4 ('optional_label' processed)
    push(state 4)
    ==
    lookup(4, 'MNEMONIC'): shift 7 ('MNEMONIC' processed)
    push(state 7)
    ==
    nextToken(): using 'IMMNUMBER'
    lookup(7, 'IMMNUMBER'): shift 18 ('IMMNUMBER' processed)
    push(state 18)
    ==
    lookup(18, '_UNDETERMINED_'): default reduction by rule 17
    executeAction(): of rule 17 ...
    ... action of rule 17 completed
    pop(1) from stack having size 6
    pop(): next state: 7, token: 'exp'
    reduce(): by rule 17 to N-terminal 'exp'
    ==
    lookup(7, 'exp'): shift 12 ('exp' processed)
    push(state 12)
    ==
    lookup(12, '_UNDETERMINED_'): default reduction by rule 10
    executeAction(): of rule 10 ...
    ... action of rule 10 completed
    pop(1) from stack having size 6
    pop(): next state: 7, token: 'opnd'
    reduce(): by rule 10 to N-terminal 'opnd'
    ==
    lookup(7, 'opnd'): shift 10 ('opnd' processed)
    push(state 10)
    ==
    nextToken(): using `,' (44)
    lookup(10, `,' (44)): shift 20 (`,' (44) processed)
    push(state 20)
    ==
    nextToken(): using 'REGISTER'
    lookup(20, 'REGISTER'): shift 13 ('REGISTER' processed)
    push(state 13)
    ==
    lookup(13, '_UNDETERMINED_'): default reduction by rule 11
    executeAction(): of rule 11 ...
    ... action of rule 11 completed
    pop(1) from stack having size 8
    pop(): next state: 20, token: 'register_exp'
    reduce(): by rule 11 to N-terminal 'register_exp'
    ==
    lookup(20, 'register_exp'): shift 11 ('register_exp' processed)
    push(state 11)
    ==
    lookup(11, '_UNDETERMINED_'): default reduction by rule 9
    executeAction(): of rule 9 ...
    ... action of rule 9 completed
    pop(1) from stack having size 8
    pop(): next state: 20, token: 'opnd'
    reduce(): by rule 9 to N-terminal 'opnd'
    ==
    lookup(20, 'opnd'): shift 25 ('opnd' processed)
    push(state 25)
    ==
    lookup(25, '_UNDETERMINED_'): default reduction by rule 6
    executeAction(): of rule 6 ...
    ... action of rule 6 completed
    pop(5) from stack having size 8
    pop(): next state: 6, token: 'instruction'
    reduce(): by rule 6 to N-terminal 'instruction'
    ==
    lookup(6, 'instruction'): shift 9 ('instruction' processed)
    push(state 9)
    ==
    lookup(9, '_UNDETERMINED_'): default reduction by rule 3
    executeAction(): of rule 3 ...
    ... action of rule 3 completed
    pop(3) from stack having size 4
    pop(): next state: 0, token: 'instruction_list'
    reduce(): by rule 3 to N-terminal 'instruction_list'
    ==
    lookup(0, 'instruction_list'): shift 2 ('instruction_list' processed)
    push(state 2)
    ==
    nextToken(): using '\x0a'
    lookup(2, '\x0a'): shift 6 ('\x0a' processed)
    push(state 6)
    ==
    nextToken(): using 'MNEMONIC'
    lookup(6, 'MNEMONIC'): default reduction by rule 7
    executeAction(): of rule 7 ...
    ... action of rule 7 completed
    pop(0) from stack having size 3
    pop(): next state: 6, token: 'optional_label'
    reduce(): by rule 7 to N-terminal 'optional_label'
    ==
    lookup(6, 'optional_label'): shift 4 ('optional_label' processed)
    push(state 4)
    ==
    lookup(4, 'MNEMONIC'): shift 7 ('MNEMONIC' processed)
    push(state 7)
    ==
    nextToken(): using 'SYMBOL'
    lookup(7, 'SYMBOL'): shift 16 ('SYMBOL' processed)
    push(state 16)
    ==
    nextToken(): using '\x0a'
    lookup(16, '\x0a'): default reduction by rule 14
    executeAction(): of rule 14 ...
    ... action of rule 14 completed
    pop(1) from stack having size 6
    pop(): next state: 7, token: 'exp'
    reduce(): by rule 14 to N-terminal 'exp'
    ==
    lookup(7, 'exp'): shift 12 ('exp' processed)
    push(state 12)
    ==
    lookup(12, '\x0a'): default reduction by rule 10
    executeAction(): of rule 10 ...
    ... action of rule 10 completed
    pop(1) from stack having size 6
    pop(): next state: 7, token: 'opnd'
    reduce(): by rule 10 to N-terminal 'opnd'
    ==
    lookup(7, 'opnd'): shift 10 ('opnd' processed)
    push(state 10)
    ==
    lookup(10, '\x0a'): default reduction by rule 5
    executeAction(): of rule 5 ...
    ... action of rule 5 completed
    pop(3) from stack having size 6
    pop(): next state: 6, token: 'instruction'
    reduce(): by rule 5 to N-terminal 'instruction'
    ==
    lookup(6, 'instruction'): shift 9 ('instruction' processed)
    push(state 9)
    ==
    lookup(9, '\x0a'): default reduction by rule 3
    executeAction(): of rule 3 ...
    ... action of rule 3 completed
    pop(3) from stack having size 4
    pop(): next state: 0, token: 'instruction_list'
    reduce(): by rule 3 to N-terminal 'instruction_list'
    ==
    lookup(0, 'instruction_list'): shift 2 ('instruction_list' processed)
    push(state 2)
    ==
    lookup(2, '\x0a'): shift 6 ('\x0a' processed)
    push(state 6)
    ==
    nextToken(): using 'MNEMONIC'
    lookup(6, 'MNEMONIC'): default reduction by rule 7
    executeAction(): of rule 7 ...
    ... action of rule 7 completed
    pop(0) from stack having size 3
    pop(): next state: 6, token: 'optional_label'
    reduce(): by rule 7 to N-terminal 'optional_label'
    ==
    lookup(6, 'optional_label'): shift 4 ('optional_label' processed)
    push(state 4)
    ==
    lookup(4, 'MNEMONIC'): shift 7 ('MNEMONIC' processed)
    push(state 7)
    ==
    nextToken(): using 'SYMBOL'
    lookup(7, 'SYMBOL'): shift 16 ('SYMBOL' processed)
    push(state 16)
    ==
    nextToken(): using `+' (43)
    lookup(16, `+' (43)): shift 23 (`+' (43) processed)
    push(state 23)
    ==
    nextToken(): using 'NUMBER'
    lookup(23, 'NUMBER'): shift 28 ('NUMBER' processed)
    push(state 28)
    ==
    lookup(28, '_UNDETERMINED_'): default reduction by rule 18
    executeAction(): of rule 18 ...
    ... action of rule 18 completed
    pop(3) from stack having size 8
    pop(): next state: 7, token: 'exp'
    reduce(): by rule 18 to N-terminal 'exp'
    ==
    lookup(7, 'exp'): shift 12 ('exp' processed)
    push(state 12)
    ==
    lookup(12, '_UNDETERMINED_'): default reduction by rule 10
    executeAction(): of rule 10 ...
    ... action of rule 10 completed
    pop(1) from stack having size 6
    pop(): next state: 7, token: 'opnd'
    reduce(): by rule 10 to N-terminal 'opnd'
    ==
    lookup(7, 'opnd'): shift 10 ('opnd' processed)
    push(state 10)
    ==
    nextToken(): using `,' (44)
    lookup(10, `,' (44)): shift 20 (`,' (44) processed)
    push(state 20)
    ==
    nextToken(): using 'REGISTER'
    lookup(20, 'REGISTER'): shift 13 ('REGISTER' processed)
    push(state 13)
    ==
    lookup(13, '_UNDETERMINED_'): default reduction by rule 11
    executeAction(): of rule 11 ...
    ... action of rule 11 completed
    pop(1) from stack having size 8
    pop(): next state: 20, token: 'register_exp'
    reduce(): by rule 11 to N-terminal 'register_exp'
    ==
    lookup(20, 'register_exp'): shift 11 ('register_exp' processed)
    push(state 11)
    ==
    lookup(11, '_UNDETERMINED_'): default reduction by rule 9
    executeAction(): of rule 9 ...
    ... action of rule 9 completed
    pop(1) from stack having size 8
    pop(): next state: 20, token: 'opnd'
    reduce(): by rule 9 to N-terminal 'opnd'
    ==
    lookup(20, 'opnd'): shift 25 ('opnd' processed)
    push(state 25)
    ==
    lookup(25, '_UNDETERMINED_'): default reduction by rule 6
    executeAction(): of rule 6 ...
    ... action of rule 6 completed
    pop(5) from stack having size 8
    pop(): next state: 6, token: 'instruction'
    reduce(): by rule 6 to N-terminal 'instruction'
    ==
    lookup(6, 'instruction'): shift 9 ('instruction' processed)
    push(state 9)
    ==
    lookup(9, '_UNDETERMINED_'): default reduction by rule 3
    executeAction(): of rule 3 ...
    ... action of rule 3 completed
    pop(3) from stack having size 4
    pop(): next state: 0, token: 'instruction_list'
    reduce(): by rule 3 to N-terminal 'instruction_list'
    ==
    lookup(0, 'instruction_list'): shift 2 ('instruction_list' processed)
    push(state 2)
    ==
    nextToken(): using '\x0a'
    lookup(2, '\x0a'): shift 6 ('\x0a' processed)
    push(state 6)
    ==
    nextToken(): using 'MNEMONIC'
    lookup(6, 'MNEMONIC'): default reduction by rule 7
    executeAction(): of rule 7 ...
    ... action of rule 7 completed
    pop(0) from stack having size 3
    pop(): next state: 6, token: 'optional_label'
    reduce(): by rule 7 to N-terminal 'optional_label'
    ==
    lookup(6, 'optional_label'): shift 4 ('optional_label' processed)
    push(state 4)
    ==
    lookup(4, 'MNEMONIC'): shift 7 ('MNEMONIC' processed)
    push(state 7)
    ==
    nextToken(): using 'SYMBOL'
    lookup(7, 'SYMBOL'): shift 16 ('SYMBOL' processed)
    push(state 16)
    ==
    nextToken(): using `,' (44)
    lookup(16, `,' (44)): default reduction by rule 14
    executeAction(): of rule 14 ...
    ... action of rule 14 completed
    pop(1) from stack having size 6
    pop(): next state: 7, token: 'exp'
    reduce(): by rule 14 to N-terminal 'exp'
    ==
    lookup(7, 'exp'): shift 12 ('exp' processed)
    push(state 12)
    ==
    lookup(12, `,' (44)): default reduction by rule 10
    executeAction(): of rule 10 ...
    ... action of rule 10 completed
    pop(1) from stack having size 6
    pop(): next state: 7, token: 'opnd'
    reduce(): by rule 10 to N-terminal 'opnd'
    ==
    lookup(7, 'opnd'): shift 10 ('opnd' processed)
    push(state 10)
    ==
    lookup(10, `,' (44)): shift 20 (`,' (44) processed)
    push(state 20)
    ==
    nextToken(): using 'REGISTER'
    lookup(20, 'REGISTER'): shift 13 ('REGISTER' processed)
    push(state 13)
    ==
    lookup(13, '_UNDETERMINED_'): default reduction by rule 11
    executeAction(): of rule 11 ...
    ... action of rule 11 completed
    pop(1) from stack having size 8
    pop(): next state: 20, token: 'register_exp'
    reduce(): by rule 11 to N-terminal 'register_exp'
    ==
    lookup(20, 'register_exp'): shift 11 ('register_exp' processed)
    push(state 11)
    ==
    lookup(11, '_UNDETERMINED_'): default reduction by rule 9
    executeAction(): of rule 9 ...
    ... action of rule 9 completed
    pop(1) from stack having size 8
    pop(): next state: 20, token: 'opnd'
    reduce(): by rule 9 to N-terminal 'opnd'
    ==
    lookup(20, 'opnd'): shift 25 ('opnd' processed)
    push(state 25)
    ==
    lookup(25, '_UNDETERMINED_'): default reduction by rule 6
    executeAction(): of rule 6 ...
    ... action of rule 6 completed
    pop(5) from stack having size 8
    pop(): next state: 6, token: 'instruction'
    reduce(): by rule 6 to N-terminal 'instruction'
    ==
    lookup(6, 'instruction'): shift 9 ('instruction' processed)
    push(state 9)
    ==
    lookup(9, '_UNDETERMINED_'): default reduction by rule 3
    executeAction(): of rule 3 ...
    ... action of rule 3 completed
    pop(3) from stack having size 4
    pop(): next state: 0, token: 'instruction_list'
    reduce(): by rule 3 to N-terminal 'instruction_list'
    ==
    lookup(0, 'instruction_list'): shift 2 ('instruction_list' processed)
    push(state 2)
    ==
    nextToken(): using '\x0a'
    lookup(2, '\x0a'): shift 6 ('\x0a' processed)
    push(state 6)
    ==
    nextToken(): using 'MNEMONIC'
    lookup(6, 'MNEMONIC'): default reduction by rule 7
    executeAction(): of rule 7 ...
    ... action of rule 7 completed
    pop(0) from stack having size 3
    pop(): next state: 6, token: 'optional_label'
    reduce(): by rule 7 to N-terminal 'optional_label'
    ==
    lookup(6, 'optional_label'): shift 4 ('optional_label' processed)
    push(state 4)
    ==
    lookup(4, 'MNEMONIC'): shift 7 ('MNEMONIC' processed)
    push(state 7)
    ==
    nextToken(): using 'REGISTER'
    lookup(7, 'REGISTER'): shift 13 ('REGISTER' processed)
    push(state 13)
    ==
    lookup(13, '_UNDETERMINED_'): default reduction by rule 11
    executeAction(): of rule 11 ...
    ... action of rule 11 completed
    pop(1) from stack having size 6
    pop(): next state: 7, token: 'register_exp'
    reduce(): by rule 11 to N-terminal 'register_exp'
    ==
    lookup(7, 'register_exp'): shift 11 ('register_exp' processed)
    push(state 11)
    ==
    lookup(11, '_UNDETERMINED_'): default reduction by rule 9
    executeAction(): of rule 9 ...
    ... action of rule 9 completed
    pop(1) from stack having size 6
    pop(): next state: 7, token: 'opnd'
    reduce(): by rule 9 to N-terminal 'opnd'
    ==
    lookup(7, 'opnd'): shift 10 ('opnd' processed)
    push(state 10)
    ==
    nextToken(): using `,' (44)
    lookup(10, `,' (44)): shift 20 (`,' (44) processed)
    push(state 20)
    ==
    nextToken(): using 'NUMBER'
    lookup(20, 'NUMBER'): shift 15 ('NUMBER' processed)
    push(state 15)
    ==
    nextToken(): using `(' (40)
    lookup(15, `(' (40)): shift 22 (`(' (40) processed)
    push(state 22)
    ==
    nextToken(): using 'REGISTER'
    lookup(22, 'REGISTER'): shift 27 ('REGISTER' processed)
    push(state 27)
    ==
    nextToken(): using `)' (41)
    lookup(27, `)' (41)): shift 30 (`)' (41) processed)
    push(state 30)
    ==
    lookup(30, '_UNDETERMINED_'): default reduction by rule 13
    executeAction(): of rule 13 ...
    ... action of rule 13 completed
    pop(4) from stack having size 11
    pop(): next state: 20, token: 'register_exp'
    reduce(): by rule 13 to N-terminal 'register_exp'
    ==
    lookup(20, 'register_exp'): shift 11 ('register_exp' processed)
    push(state 11)
    ==
    lookup(11, '_UNDETERMINED_'): default reduction by rule 9
    executeAction(): of rule 9 ...
    ... action of rule 9 completed
    pop(1) from stack having size 8
    pop(): next state: 20, token: 'opnd'
    reduce(): by rule 9 to N-terminal 'opnd'
    ==
    lookup(20, 'opnd'): shift 25 ('opnd' processed)
    push(state 25)
    ==
    lookup(25, '_UNDETERMINED_'): default reduction by rule 6
    executeAction(): of rule 6 ...
    ... action of rule 6 completed
    pop(5) from stack having size 8
    pop(): next state: 6, token: 'instruction'
    reduce(): by rule 6 to N-terminal 'instruction'
    ==
    lookup(6, 'instruction'): shift 9 ('instruction' processed)
    push(state 9)
    ==
    lookup(9, '_UNDETERMINED_'): default reduction by rule 3
    executeAction(): of rule 3 ...
    ... action of rule 3 completed
    pop(3) from stack having size 4
    pop(): next state: 0, token: 'instruction_list'
    reduce(): by rule 3 to N-terminal 'instruction_list'
    ==
    lookup(0, 'instruction_list'): shift 2 ('instruction_list' processed)
    push(state 2)
    ==
    nextToken(): using '\x0a'
    lookup(2, '\x0a'): shift 6 ('\x0a' processed)
    push(state 6)
    ==
    nextToken(): using 'MNEMONIC'
    lookup(6, 'MNEMONIC'): default reduction by rule 7
    executeAction(): of rule 7 ...
    ... action of rule 7 completed
    pop(0) from stack having size 3
    pop(): next state: 6, token: 'optional_label'
    reduce(): by rule 7 to N-terminal 'optional_label'
    ==
    lookup(6, 'optional_label'): shift 4 ('optional_label' processed)
    push(state 4)
    ==
    lookup(4, 'MNEMONIC'): shift 7 ('MNEMONIC' processed)
    push(state 7)
    ==
    nextToken(): using 'REGISTER'
    lookup(7, 'REGISTER'): shift 13 ('REGISTER' processed)
    push(state 13)
    ==
    lookup(13, '_UNDETERMINED_'): default reduction by rule 11
    executeAction(): of rule 11 ...
    ... action of rule 11 completed
    pop(1) from stack having size 6
    pop(): next state: 7, token: 'register_exp'
    reduce(): by rule 11 to N-terminal 'register_exp'
    ==
    lookup(7, 'register_exp'): shift 11 ('register_exp' processed)
    push(state 11)
    ==
    lookup(11, '_UNDETERMINED_'): default reduction by rule 9
    executeAction(): of rule 9 ...
    ... action of rule 9 completed
    pop(1) from stack having size 6
    pop(): next state: 7, token: 'opnd'
    reduce(): by rule 9 to N-terminal 'opnd'
    ==
    lookup(7, 'opnd'): shift 10 ('opnd' processed)
    push(state 10)
    ==
    nextToken(): using `,' (44)
    lookup(10, `,' (44)): shift 20 (`,' (44) processed)
    push(state 20)
    ==
    nextToken(): using 'NUMBER'
    lookup(20, 'NUMBER'): shift 15 ('NUMBER' processed)
    push(state 15)
    ==
    nextToken(): using `(' (40)
    lookup(15, `(' (40)): shift 22 (`(' (40) processed)
    push(state 22)
    ==
    nextToken(): using 'REGISTER'
    lookup(22, 'REGISTER'): shift 27 ('REGISTER' processed)
    push(state 27)
    ==
    nextToken(): using `)' (41)
    lookup(27, `)' (41)): shift 30 (`)' (41) processed)
    push(state 30)
    ==
    lookup(30, '_UNDETERMINED_'): default reduction by rule 13
    executeAction(): of rule 13 ...
    ... action of rule 13 completed
    pop(4) from stack having size 11
    pop(): next state: 20, token: 'register_exp'
    reduce(): by rule 13 to N-terminal 'register_exp'
    ==
    lookup(20, 'register_exp'): shift 11 ('register_exp' processed)
    push(state 11)
    ==
    lookup(11, '_UNDETERMINED_'): default reduction by rule 9
    executeAction(): of rule 9 ...
    ... action of rule 9 completed
    pop(1) from stack having size 8
    pop(): next state: 20, token: 'opnd'
    reduce(): by rule 9 to N-terminal 'opnd'
    ==
    lookup(20, 'opnd'): shift 25 ('opnd' processed)
    push(state 25)
    ==
    lookup(25, '_UNDETERMINED_'): default reduction by rule 6
    executeAction(): of rule 6 ...
    ... action of rule 6 completed
    pop(5) from stack having size 8
    pop(): next state: 6, token: 'instruction'
    reduce(): by rule 6 to N-terminal 'instruction'
    ==
    lookup(6, 'instruction'): shift 9 ('instruction' processed)
    push(state 9)
    ==
    lookup(9, '_UNDETERMINED_'): default reduction by rule 3
    executeAction(): of rule 3 ...
    ... action of rule 3 completed
    pop(3) from stack having size 4
    pop(): next state: 0, token: 'instruction_list'
    reduce(): by rule 3 to N-terminal 'instruction_list'
    ==
    lookup(0, 'instruction_list'): shift 2 ('instruction_list' processed)
    push(state 2)
    ==
    nextToken(): using '\x0a'
    lookup(2, '\x0a'): shift 6 ('\x0a' processed)
    push(state 6)
    ==
    nextToken(): using 'MNEMONIC'
    lookup(6, 'MNEMONIC'): default reduction by rule 7
    executeAction(): of rule 7 ...
    ... action of rule 7 completed
    pop(0) from stack having size 3
    pop(): next state: 6, token: 'optional_label'
    reduce(): by rule 7 to N-terminal 'optional_label'
    ==
    lookup(6, 'optional_label'): shift 4 ('optional_label' processed)
    push(state 4)
    ==
    lookup(4, 'MNEMONIC'): shift 7 ('MNEMONIC' processed)
    push(state 7)
    ==
    nextToken(): using 'IMMSYMBOL'
    lookup(7, 'IMMSYMBOL'): shift 17 ('IMMSYMBOL' processed)
    push(state 17)
    ==
    nextToken(): using `,' (44)
    lookup(17, `,' (44)): default reduction by rule 15
    executeAction(): of rule 15 ...
    ... action of rule 15 completed
    pop(1) from stack having size 6
    pop(): next state: 7, token: 'exp'
    reduce(): by rule 15 to N-terminal 'exp'
    ==
    lookup(7, 'exp'): shift 12 ('exp' processed)
    push(state 12)
    ==
    lookup(12, `,' (44)): default reduction by rule 10
    executeAction(): of rule 10 ...
    ... action of rule 10 completed
    pop(1) from stack having size 6
    pop(): next state: 7, token: 'opnd'
    reduce(): by rule 10 to N-terminal 'opnd'
    ==
    lookup(7, 'opnd'): shift 10 ('opnd' processed)
    push(state 10)
    ==
    lookup(10, `,' (44)): shift 20 (`,' (44) processed)
    push(state 20)
    ==
    nextToken(): using `(' (40)
    lookup(20, `(' (40)): shift 14 (`(' (40) processed)
    push(state 14)
    ==
    nextToken(): using 'REGISTER'
    lookup(14, 'REGISTER'): shift 21 ('REGISTER' processed)
    push(state 21)
    ==
    nextToken(): using `)' (41)
    lookup(21, `)' (41)): shift 26 (`)' (41) processed)
    push(state 26)
    ==
    lookup(26, '_UNDETERMINED_'): default reduction by rule 12
    executeAction(): of rule 12 ...
    ... action of rule 12 completed
    pop(3) from stack having size 10
    pop(): next state: 20, token: 'register_exp'
    reduce(): by rule 12 to N-terminal 'register_exp'
    ==
    lookup(20, 'register_exp'): shift 11 ('register_exp' processed)
    push(state 11)
    ==
    lookup(11, '_UNDETERMINED_'): default reduction by rule 9
    executeAction(): of rule 9 ...
    ... action of rule 9 completed
    pop(1) from stack having size 8
    pop(): next state: 20, token: 'opnd'
    reduce(): by rule 9 to N-terminal 'opnd'
    ==
    lookup(20, 'opnd'): shift 25 ('opnd' processed)
    push(state 25)
    ==
    lookup(25, '_UNDETERMINED_'): default reduction by rule 6
    executeAction(): of rule 6 ...
    ... action of rule 6 completed
    pop(5) from stack having size 8
    pop(): next state: 6, token: 'instruction'
    reduce(): by rule 6 to N-terminal 'instruction'
    ==
    lookup(6, 'instruction'): shift 9 ('instruction' processed)
    push(state 9)
    ==
    lookup(9, '_UNDETERMINED_'): default reduction by rule 3
    executeAction(): of rule 3 ...
    ... action of rule 3 completed
    pop(3) from stack having size 4
    pop(): next state: 0, token: 'instruction_list'
    reduce(): by rule 3 to N-terminal 'instruction_list'
    ==
    lookup(0, 'instruction_list'): shift 2 ('instruction_list' processed)
    push(state 2)
    ==
    nextToken(): using '\x0a'
    lookup(2, '\x0a'): shift 6 ('\x0a' processed)
    push(state 6)
    ==
    nextToken(): using 'MNEMONIC'
    lookup(6, 'MNEMONIC'): default reduction by rule 7
    executeAction(): of rule 7 ...
    ... action of rule 7 completed
    pop(0) from stack having size 3
    pop(): next state: 6, token: 'optional_label'
    reduce(): by rule 7 to N-terminal 'optional_label'
    ==
    lookup(6, 'optional_label'): shift 4 ('optional_label' processed)
    push(state 4)
    ==
    lookup(4, 'MNEMONIC'): shift 7 ('MNEMONIC' processed)
    push(state 7)
    ==
    nextToken(): using 'SYMBOL'
    lookup(7, 'SYMBOL'): shift 16 ('SYMBOL' processed)
    push(state 16)
    ==
    nextToken(): using '\x0a'
    lookup(16, '\x0a'): default reduction by rule 14
    executeAction(): of rule 14 ...
    ... action of rule 14 completed
    pop(1) from stack having size 6
    pop(): next state: 7, token: 'exp'
    reduce(): by rule 14 to N-terminal 'exp'
    ==
    lookup(7, 'exp'): shift 12 ('exp' processed)
    push(state 12)
    ==
    lookup(12, '\x0a'): default reduction by rule 10
    executeAction(): of rule 10 ...
    ... action of rule 10 completed
    pop(1) from stack having size 6
    pop(): next state: 7, token: 'opnd'
    reduce(): by rule 10 to N-terminal 'opnd'
    ==
    lookup(7, 'opnd'): shift 10 ('opnd' processed)
    push(state 10)
    ==
    lookup(10, '\x0a'): default reduction by rule 5
    executeAction(): of rule 5 ...
    ... action of rule 5 completed
    pop(3) from stack having size 6
    pop(): next state: 6, token: 'instruction'
    reduce(): by rule 5 to N-terminal 'instruction'
    ==
    lookup(6, 'instruction'): shift 9 ('instruction' processed)
    push(state 9)
    ==
    lookup(9, '\x0a'): default reduction by rule 3
    executeAction(): of rule 3 ...
    ... action of rule 3 completed
    pop(3) from stack having size 4
    pop(): next state: 0, token: 'instruction_list'
    reduce(): by rule 3 to N-terminal 'instruction_list'
    ==
    lookup(0, 'instruction_list'): shift 2 ('instruction_list' processed)
    push(state 2)
    ==
    lookup(2, '\x0a'): shift 6 ('\x0a' processed)
    push(state 6)
    ==
    nextToken(): using 'MNEMONIC'
    lookup(6, 'MNEMONIC'): default reduction by rule 7
    executeAction(): of rule 7 ...
    ... action of rule 7 completed
    pop(0) from stack having size 3
    pop(): next state: 6, token: 'optional_label'
    reduce(): by rule 7 to N-terminal 'optional_label'
    ==
    lookup(6, 'optional_label'): shift 4 ('optional_label' processed)
    push(state 4)
    ==
    lookup(4, 'MNEMONIC'): shift 7 ('MNEMONIC' processed)
    push(state 7)
    ==
    nextToken(): using 'IMMNUMBER'
    lookup(7, 'IMMNUMBER'): shift 18 ('IMMNUMBER' processed)
    push(state 18)
    ==
    lookup(18, '_UNDETERMINED_'): default reduction by rule 17
    executeAction(): of rule 17 ...
    ... action of rule 17 completed
    pop(1) from stack having size 6
    pop(): next state: 7, token: 'exp'
    reduce(): by rule 17 to N-terminal 'exp'
    ==
    lookup(7, 'exp'): shift 12 ('exp' processed)
    push(state 12)
    ==
    lookup(12, '_UNDETERMINED_'): default reduction by rule 10
    executeAction(): of rule 10 ...
    ... action of rule 10 completed
    pop(1) from stack having size 6
    pop(): next state: 7, token: 'opnd'
    reduce(): by rule 10 to N-terminal 'opnd'
    ==
    lookup(7, 'opnd'): shift 10 ('opnd' processed)
    push(state 10)
    ==
    nextToken(): using `,' (44)
    lookup(10, `,' (44)): shift 20 (`,' (44) processed)
    push(state 20)
    ==
    nextToken(): using 'REGISTER'
    lookup(20, 'REGISTER'): shift 13 ('REGISTER' processed)
    push(state 13)
    ==
    lookup(13, '_UNDETERMINED_'): default reduction by rule 11
    executeAction(): of rule 11 ...
    ... action of rule 11 completed
    pop(1) from stack having size 8
    pop(): next state: 20, token: 'register_exp'
    reduce(): by rule 11 to N-terminal 'register_exp'
    ==
    lookup(20, 'register_exp'): shift 11 ('register_exp' processed)
    push(state 11)
    ==
    lookup(11, '_UNDETERMINED_'): default reduction by rule 9
    executeAction(): of rule 9 ...
    ... action of rule 9 completed
    pop(1) from stack having size 8
    pop(): next state: 20, token: 'opnd'
    reduce(): by rule 9 to N-terminal 'opnd'
    ==
    lookup(20, 'opnd'): shift 25 ('opnd' processed)
    push(state 25)
    ==
    lookup(25, '_UNDETERMINED_'): default reduction by rule 6
    executeAction(): of rule 6 ...
    ... action of rule 6 completed
    pop(5) from stack having size 8
    pop(): next state: 6, token: 'instruction'
    reduce(): by rule 6 to N-terminal 'instruction'
    ==
    lookup(6, 'instruction'): shift 9 ('instruction' processed)
    push(state 9)
    ==
    lookup(9, '_UNDETERMINED_'): default reduction by rule 3
    executeAction(): of rule 3 ...
    ... action of rule 3 completed
    pop(3) from stack having size 4
    pop(): next state: 0, token: 'instruction_list'
    reduce(): by rule 3 to N-terminal 'instruction_list'
    ==
    lookup(0, 'instruction_list'): shift 2 ('instruction_list' processed)
    push(state 2)
    ==
    nextToken(): using '\x0a'
    lookup(2, '\x0a'): shift 6 ('\x0a' processed)
    push(state 6)
    ==
    nextToken(): using 'MNEMONIC'
    lookup(6, 'MNEMONIC'): default reduction by rule 7
    executeAction(): of rule 7 ...
    ... action of rule 7 completed
    pop(0) from stack having size 3
    pop(): next state: 6, token: 'optional_label'
    reduce(): by rule 7 to N-terminal 'optional_label'
    ==
    lookup(6, 'optional_label'): shift 4 ('optional_label' processed)
    push(state 4)
    ==
    lookup(4, 'MNEMONIC'): shift 7 ('MNEMONIC' processed)
    push(state 7)
    ==
    nextToken(): using '\x0a'
    lookup(7, '\x0a'): default reduction by rule 4
    executeAction(): of rule 4 ...
    ... action of rule 4 completed
    pop(2) from stack having size 5
    pop(): next state: 6, token: 'instruction'
    reduce(): by rule 4 to N-terminal 'instruction'
    ==
    lookup(6, 'instruction'): shift 9 ('instruction' processed)
    push(state 9)
    ==
    lookup(9, '\x0a'): default reduction by rule 3
    executeAction(): of rule 3 ...
    ... action of rule 3 completed
    pop(3) from stack having size 4
    pop(): next state: 0, token: 'instruction_list'
    reduce(): by rule 3 to N-terminal 'instruction_list'
    ==
    lookup(0, 'instruction_list'): shift 2 ('instruction_list' processed)
    push(state 2)
    ==
    lookup(2, '\x0a'): shift 6 ('\x0a' processed)
    push(state 6)
    ==
    nextToken(): using 'MNEMONIC'
    lookup(6, 'MNEMONIC'): default reduction by rule 7
    executeAction(): of rule 7 ...
    ... action of rule 7 completed
    pop(0) from stack having size 3
    pop(): next state: 6, token: 'optional_label'
    reduce(): by rule 7 to N-terminal 'optional_label'
    ==
    lookup(6, 'optional_label'): shift 4 ('optional_label' processed)
    push(state 4)
    ==
    lookup(4, 'MNEMONIC'): shift 7 ('MNEMONIC' processed)
    push(state 7)
    ==
    nextToken(): using '\x0a'
    lookup(7, '\x0a'): default reduction by rule 4
    executeAction(): of rule 4 ...
    ... action of rule 4 completed
    pop(2) from stack having size 5
    pop(): next state: 6, token: 'instruction'
    reduce(): by rule 4 to N-terminal 'instruction'
    ==
    lookup(6, 'instruction'): shift 9 ('instruction' processed)
    push(state 9)
    ==
    lookup(9, '\x0a'): default reduction by rule 3
    executeAction(): of rule 3 ...
    ... action of rule 3 completed
    pop(3) from stack having size 4
    pop(): next state: 0, token: 'instruction_list'
    reduce(): by rule 3 to N-terminal 'instruction_list'
    ==
    lookup(0, 'instruction_list'): shift 2 ('instruction_list' processed)
    push(state 2)
    ==
    lookup(2, '\x0a'): shift 6 ('\x0a' processed)
    push(state 6)
    ==
    nextToken(): using 'SYMBOL'
    lookup(6, 'SYMBOL'): shift 5 ('SYMBOL' processed)
    push(state 5)
    ==
    nextToken(): using `:' (58)
    lookup(5, `:' (58)): shift 8 (`:' (58) processed)
    push(state 8)
    ==
    nextToken(): using '\x0a'
    lookup(8, '\x0a'): shift 19 ('\x0a' processed)
    push(state 19)
    ==
    lookup(19, '_UNDETERMINED_'): default reduction by rule 8
    executeAction(): of rule 8 ...
    ... action of rule 8 completed
    pop(3) from stack having size 6
    pop(): next state: 6, token: 'optional_label'
    reduce(): by rule 8 to N-terminal 'optional_label'
    ==
    lookup(6, 'optional_label'): shift 4 ('optional_label' processed)
    push(state 4)
    ==
    nextToken(): using 'MNEMONIC'
    lookup(4, 'MNEMONIC'): shift 7 ('MNEMONIC' processed)
    push(state 7)
    ==
    nextToken(): using 'REGISTER'
    lookup(7, 'REGISTER'): shift 13 ('REGISTER' processed)
    push(state 13)
    ==
    lookup(13, '_UNDETERMINED_'): default reduction by rule 11
    executeAction(): of rule 11 ...
    ... action of rule 11 completed
    pop(1) from stack having size 6
    pop(): next state: 7, token: 'register_exp'
    reduce(): by rule 11 to N-terminal 'register_exp'
    ==
    lookup(7, 'register_exp'): shift 11 ('register_exp' processed)
    push(state 11)
    ==
    lookup(11, '_UNDETERMINED_'): default reduction by rule 9
    executeAction(): of rule 9 ...
    ... action of rule 9 completed
    pop(1) from stack having size 6
    pop(): next state: 7, token: 'opnd'
    reduce(): by rule 9 to N-terminal 'opnd'
    ==
    lookup(7, 'opnd'): shift 10 ('opnd' processed)
    push(state 10)
    ==
    nextToken(): using '\x0a'
    lookup(10, '\x0a'): default reduction by rule 5
    executeAction(): of rule 5 ...
    ... action of rule 5 completed
    pop(3) from stack having size 6
    pop(): next state: 6, token: 'instruction'
    reduce(): by rule 5 to N-terminal 'instruction'
    ==
    lookup(6, 'instruction'): shift 9 ('instruction' processed)
    push(state 9)
    ==
    lookup(9, '\x0a'): default reduction by rule 3
    executeAction(): of rule 3 ...
    ... action of rule 3 completed
    pop(3) from stack having size 4
    pop(): next state: 0, token: 'instruction_list'
    reduce(): by rule 3 to N-terminal 'instruction_list'
    ==
    lookup(0, 'instruction_list'): shift 2 ('instruction_list' processed)
    push(state 2)
    ==
    lookup(2, '\x0a'): shift 6 ('\x0a' processed)
    push(state 6)
    ==
    nextToken(): using 'MNEMONIC'
    lookup(6, 'MNEMONIC'): default reduction by rule 7
    executeAction(): of rule 7 ...
    ... action of rule 7 completed
    pop(0) from stack having size 3
    pop(): next state: 6, token: 'optional_label'
    reduce(): by rule 7 to N-terminal 'optional_label'
    ==
    lookup(6, 'optional_label'): shift 4 ('optional_label' processed)
    push(state 4)
    ==
    lookup(4, 'MNEMONIC'): shift 7 ('MNEMONIC' processed)
    push(state 7)
    ==
    nextToken(): using 'REGISTER'
    lookup(7, 'REGISTER'): shift 13 ('REGISTER' processed)
    push(state 13)
    ==
    lookup(13, '_UNDETERMINED_'): default reduction by rule 11
    executeAction(): of rule 11 ...
    ... action of rule 11 completed
    pop(1) from stack having size 6
    pop(): next state: 7, token: 'register_exp'
    reduce(): by rule 11 to N-terminal 'register_exp'
    ==
    lookup(7, 'register_exp'): shift 11 ('register_exp' processed)
    push(state 11)
    ==
    lookup(11, '_UNDETERMINED_'): default reduction by rule 9
    executeAction(): of rule 9 ...
    ... action of rule 9 completed
    pop(1) from stack having size 6
    pop(): next state: 7, token: 'opnd'
    reduce(): by rule 9 to N-terminal 'opnd'
    ==
    lookup(7, 'opnd'): shift 10 ('opnd' processed)
    push(state 10)
    ==
    nextToken(): using `,' (44)
    lookup(10, `,' (44)): shift 20 (`,' (44) processed)
    push(state 20)
    ==
    nextToken(): using 'REGISTER'
    lookup(20, 'REGISTER'): shift 13 ('REGISTER' processed)
    push(state 13)
    ==
    lookup(13, '_UNDETERMINED_'): default reduction by rule 11
    executeAction(): of rule 11 ...
    ... action of rule 11 completed
    pop(1) from stack having size 8
    pop(): next state: 20, token: 'register_exp'
    reduce(): by rule 11 to N-terminal 'register_exp'
    ==
    lookup(20, 'register_exp'): shift 11 ('register_exp' processed)
    push(state 11)
    ==
    lookup(11, '_UNDETERMINED_'): default reduction by rule 9
    executeAction(): of rule 9 ...
    ... action of rule 9 completed
    pop(1) from stack having size 8
    pop(): next state: 20, token: 'opnd'
    reduce(): by rule 9 to N-terminal 'opnd'
    ==
    lookup(20, 'opnd'): shift 25 ('opnd' processed)
    push(state 25)
    ==
    lookup(25, '_UNDETERMINED_'): default reduction by rule 6
    executeAction(): of rule 6 ...
    ... action of rule 6 completed
    pop(5) from stack having size 8
    pop(): next state: 6, token: 'instruction'
    reduce(): by rule 6 to N-terminal 'instruction'
    ==
    lookup(6, 'instruction'): shift 9 ('instruction' processed)
    push(state 9)
    ==
    lookup(9, '_UNDETERMINED_'): default reduction by rule 3
    executeAction(): of rule 3 ...
    ... action of rule 3 completed
    pop(3) from stack having size 4
    pop(): next state: 0, token: 'instruction_list'
    reduce(): by rule 3 to N-terminal 'instruction_list'
    ==
    lookup(0, 'instruction_list'): shift 2 ('instruction_list' processed)
    push(state 2)
    ==
    nextToken(): using '\x0a'
    lookup(2, '\x0a'): shift 6 ('\x0a' processed)
    push(state 6)
    ==
    nextToken(): using 'MNEMONIC'
    lookup(6, 'MNEMONIC'): default reduction by rule 7
    executeAction(): of rule 7 ...
    ... action of rule 7 completed
    pop(0) from stack having size 3
    pop(): next state: 6, token: 'optional_label'
    reduce(): by rule 7 to N-terminal 'optional_label'
    ==
    lookup(6, 'optional_label'): shift 4 ('optional_label' processed)
    push(state 4)
    ==
    lookup(4, 'MNEMONIC'): shift 7 ('MNEMONIC' processed)
    push(state 7)
    ==
    nextToken(): using 'IMMNUMBER'
    lookup(7, 'IMMNUMBER'): shift 18 ('IMMNUMBER' processed)
    push(state 18)
    ==
    lookup(18, '_UNDETERMINED_'): default reduction by rule 17
    executeAction(): of rule 17 ...
    ... action of rule 17 completed
    pop(1) from stack having size 6
    pop(): next state: 7, token: 'exp'
    reduce(): by rule 17 to N-terminal 'exp'
    ==
    lookup(7, 'exp'): shift 12 ('exp' processed)
    push(state 12)
    ==
    lookup(12, '_UNDETERMINED_'): default reduction by rule 10
    executeAction(): of rule 10 ...
    ... action of rule 10 completed
    pop(1) from stack having size 6
    pop(): next state: 7, token: 'opnd'
    reduce(): by rule 10 to N-terminal 'opnd'
    ==
    lookup(7, 'opnd'): shift 10 ('opnd' processed)
    push(state 10)
    ==
    nextToken(): using `,' (44)
    lookup(10, `,' (44)): shift 20 (`,' (44) processed)
    push(state 20)
    ==
    nextToken(): using 'REGISTER'
    lookup(20, 'REGISTER'): shift 13 ('REGISTER' processed)
    push(state 13)
    ==
    lookup(13, '_UNDETERMINED_'): default reduction by rule 11
    executeAction(): of rule 11 ...
    ... action of rule 11 completed
    pop(1) from stack having size 8
    pop(): next state: 20, token: 'register_exp'
    reduce(): by rule 11 to N-terminal 'register_exp'
    ==
    lookup(20, 'register_exp'): shift 11 ('register_exp' processed)
    push(state 11)
    ==
    lookup(11, '_UNDETERMINED_'): default reduction by rule 9
    executeAction(): of rule 9 ...
    ... action of rule 9 completed
    pop(1) from stack having size 8
    pop(): next state: 20, token: 'opnd'
    reduce(): by rule 9 to N-terminal 'opnd'
    ==
    lookup(20, 'opnd'): shift 25 ('opnd' processed)
    push(state 25)
    ==
    lookup(25, '_UNDETERMINED_'): default reduction by rule 6
    executeAction(): of rule 6 ...
    ... action of rule 6 completed
    pop(5) from stack having size 8
    pop(): next state: 6, token: 'instruction'
    reduce(): by rule 6 to N-terminal 'instruction'
    ==
    lookup(6, 'instruction'): shift 9 ('instruction' processed)
    push(state 9)
    ==
    lookup(9, '_UNDETERMINED_'): default reduction by rule 3
    executeAction(): of rule 3 ...
    ... action of rule 3 completed
    pop(3) from stack having size 4
    pop(): next state: 0, token: 'instruction_list'
    reduce(): by rule 3 to N-terminal 'instruction_list'
    ==
    lookup(0, 'instruction_list'): shift 2 ('instruction_list' processed)
    push(state 2)
    ==
    nextToken(): using '\x0a'
    lookup(2, '\x0a'): shift 6 ('\x0a' processed)
    push(state 6)
    ==
    nextToken(): using 'MNEMONIC'
    lookup(6, 'MNEMONIC'): default reduction by rule 7
    executeAction(): of rule 7 ...
    ... action of rule 7 completed
    pop(0) from stack having size 3
    pop(): next state: 6, token: 'optional_label'
    reduce(): by rule 7 to N-terminal 'optional_label'
    ==
    lookup(6, 'optional_label'): shift 4 ('optional_label' processed)
    push(state 4)
    ==
    lookup(4, 'MNEMONIC'): shift 7 ('MNEMONIC' processed)
    push(state 7)
    ==
    nextToken(): using 'IMMSYMBOL'
    lookup(7, 'IMMSYMBOL'): shift 17 ('IMMSYMBOL' processed)
    push(state 17)
    ==
    nextToken(): using `+' (43)
    lookup(17, `+' (43)): shift 24 (`+' (43) processed)
    push(state 24)
    ==
    nextToken(): using 'NUMBER'
    lookup(24, 'NUMBER'): shift 29 ('NUMBER' processed)
    push(state 29)
    ==
    lookup(29, '_UNDETERMINED_'): default reduction by rule 19
    executeAction(): of rule 19 ...
    ... action of rule 19 completed
    pop(3) from stack having size 8
    pop(): next state: 7, token: 'exp'
    reduce(): by rule 19 to N-terminal 'exp'
    ==
    lookup(7, 'exp'): shift 12 ('exp' processed)
    push(state 12)
    ==
    lookup(12, '_UNDETERMINED_'): default reduction by rule 10
    executeAction(): of rule 10 ...
    ... action of rule 10 completed
    pop(1) from stack having size 6
    pop(): next state: 7, token: 'opnd'
    reduce(): by rule 10 to N-terminal 'opnd'
    ==
    lookup(7, 'opnd'): shift 10 ('opnd' processed)
    push(state 10)
    ==
    nextToken(): using `,' (44)
    lookup(10, `,' (44)): shift 20 (`,' (44) processed)
    push(state 20)
    ==
    nextToken(): using 'SYMBOL'
    lookup(20, 'SYMBOL'): shift 16 ('SYMBOL' processed)
    push(state 16)
    ==
    nextToken(): using '\x0a'
    lookup(16, '\x0a'): default reduction by rule 14
    executeAction(): of rule 14 ...
    ... action of rule 14 completed
    pop(1) from stack having size 8
    pop(): next state: 20, token: 'exp'
    reduce(): by rule 14 to N-terminal 'exp'
    ==
    lookup(20, 'exp'): shift 12 ('exp' processed)
    push(state 12)
    ==
    lookup(12, '\x0a'): default reduction by rule 10
    executeAction(): of rule 10 ...
    ... action of rule 10 completed
    pop(1) from stack having size 8
    pop(): next state: 20, token: 'opnd'
    reduce(): by rule 10 to N-terminal 'opnd'
    ==
    lookup(20, 'opnd'): shift 25 ('opnd' processed)
    push(state 25)
    ==
    lookup(25, '\x0a'): default reduction by rule 6
    executeAction(): of rule 6 ...
    ... action of rule 6 completed
    pop(5) from stack having size 8
    pop(): next state: 6, token: 'instruction'
    reduce(): by rule 6 to N-terminal 'instruction'
    ==
    lookup(6, 'instruction'): shift 9 ('instruction' processed)
    push(state 9)
    ==
    lookup(9, '\x0a'): default reduction by rule 3
    executeAction(): of rule 3 ...
    ... action of rule 3 completed
    pop(3) from stack having size 4
    pop(): next state: 0, token: 'instruction_list'
    reduce(): by rule 3 to N-terminal 'instruction_list'
    ==
    lookup(0, 'instruction_list'): shift 2 ('instruction_list' processed)
    push(state 2)
    ==
    lookup(2, '\x0a'): shift 6 ('\x0a' processed)
    push(state 6)
    ==
    nextToken(): using 'MNEMONIC'
    lookup(6, 'MNEMONIC'): default reduction by rule 7
    executeAction(): of rule 7 ...
    ... action of rule 7 completed
    pop(0) from stack having size 3
    pop(): next state: 6, token: 'optional_label'
    reduce(): by rule 7 to N-terminal 'optional_label'
    ==
    lookup(6, 'optional_label'): shift 4 ('optional_label' processed)
    push(state 4)
    ==
    lookup(4, 'MNEMONIC'): shift 7 ('MNEMONIC' processed)
    push(state 7)
    ==
    nextToken(): using 'SYMBOL'
    lookup(7, 'SYMBOL'): shift 16 ('SYMBOL' processed)
    push(state 16)
    ==
    nextToken(): using `,' (44)
    lookup(16, `,' (44)): default reduction by rule 14
    executeAction(): of rule 14 ...
    ... action of rule 14 completed
    pop(1) from stack having size 6
    pop(): next state: 7, token: 'exp'
    reduce(): by rule 14 to N-terminal 'exp'
    ==
    lookup(7, 'exp'): shift 12 ('exp' processed)
    push(state 12)
    ==
    lookup(12, `,' (44)): default reduction by rule 10
    executeAction(): of rule 10 ...
    ... action of rule 10 completed
    pop(1) from stack having size 6
    pop(): next state: 7, token: 'opnd'
    reduce(): by rule 10 to N-terminal 'opnd'
    ==
    lookup(7, 'opnd'): shift 10 ('opnd' processed)
    push(state 10)
    ==
    lookup(10, `,' (44)): shift 20 (`,' (44) processed)
    push(state 20)
    ==
    nextToken(): using 'REGISTER'
    lookup(20, 'REGISTER'): shift 13 ('REGISTER' processed)
    push(state 13)
    ==
    lookup(13, '_UNDETERMINED_'): default reduction by rule 11
    executeAction(): of rule 11 ...
    ... action of rule 11 completed
    pop(1) from stack having size 8
    pop(): next state: 20, token: 'register_exp'
    reduce(): by rule 11 to N-terminal 'register_exp'
    ==
    lookup(20, 'register_exp'): shift 11 ('register_exp' processed)
    push(state 11)
    ==
    lookup(11, '_UNDETERMINED_'): default reduction by rule 9
    executeAction(): of rule 9 ...
    ... action of rule 9 completed
    pop(1) from stack having size 8
    pop(): next state: 20, token: 'opnd'
    reduce(): by rule 9 to N-terminal 'opnd'
    ==
    lookup(20, 'opnd'): shift 25 ('opnd' processed)
    push(state 25)
    ==
    lookup(25, '_UNDETERMINED_'): default reduction by rule 6
    executeAction(): of rule 6 ...
    ... action of rule 6 completed
    pop(5) from stack having size 8
    pop(): next state: 6, token: 'instruction'
    reduce(): by rule 6 to N-terminal 'instruction'
    ==
    lookup(6, 'instruction'): shift 9 ('instruction' processed)
    push(state 9)
    ==
    lookup(9, '_UNDETERMINED_'): default reduction by rule 3
    executeAction(): of rule 3 ...
    ... action of rule 3 completed
    pop(3) from stack having size 4
    pop(): next state: 0, token: 'instruction_list'
    reduce(): by rule 3 to N-terminal 'instruction_list'
    ==
    lookup(0, 'instruction_list'): shift 2 ('instruction_list' processed)
    push(state 2)
    ==
    nextToken(): using '\x0a'
    lookup(2, '\x0a'): shift 6 ('\x0a' processed)
    push(state 6)
    ==
    nextToken(): using 'MNEMONIC'
    lookup(6, 'MNEMONIC'): default reduction by rule 7
    executeAction(): of rule 7 ...
    ... action of rule 7 completed
    pop(0) from stack having size 3
    pop(): next state: 6, token: 'optional_label'
    reduce(): by rule 7 to N-terminal 'optional_label'
    ==
    lookup(6, 'optional_label'): shift 4 ('optional_label' processed)
    push(state 4)
    ==
    lookup(4, 'MNEMONIC'): shift 7 ('MNEMONIC' processed)
    push(state 7)
    ==
    nextToken(): using `(' (40)
    lookup(7, `(' (40)): shift 14 (`(' (40) processed)
    push(state 14)
    ==
    nextToken(): using 'REGISTER'
    lookup(14, 'REGISTER'): shift 21 ('REGISTER' processed)
    push(state 21)
    ==
    nextToken(): using `)' (41)
    lookup(21, `)' (41)): shift 26 (`)' (41) processed)
    push(state 26)
    ==
    lookup(26, '_UNDETERMINED_'): default reduction by rule 12
    executeAction(): of rule 12 ...
    ... action of rule 12 completed
    pop(3) from stack having size 8
    pop(): next state: 7, token: 'register_exp'
    reduce(): by rule 12 to N-terminal 'register_exp'
    ==
    lookup(7, 'register_exp'): shift 11 ('register_exp' processed)
    push(state 11)
    ==
    lookup(11, '_UNDETERMINED_'): default reduction by rule 9
    executeAction(): of rule 9 ...
    ... action of rule 9 completed
    pop(1) from stack having size 6
    pop(): next state: 7, token: 'opnd'
    reduce(): by rule 9 to N-terminal 'opnd'
    ==
    lookup(7, 'opnd'): shift 10 ('opnd' processed)
    push(state 10)
    ==
    nextToken(): using `,' (44)
    lookup(10, `,' (44)): shift 20 (`,' (44) processed)
    push(state 20)
    ==
    nextToken(): using 'REGISTER'
    lookup(20, 'REGISTER'): shift 13 ('REGISTER' processed)
    push(state 13)
    ==
    lookup(13, '_UNDETERMINED_'): default reduction by rule 11
    executeAction(): of rule 11 ...
    ... action of rule 11 completed
    pop(1) from stack having size 8
    pop(): next state: 20, token: 'register_exp'
    reduce(): by rule 11 to N-terminal 'register_exp'
    ==
    lookup(20, 'register_exp'): shift 11 ('register_exp' processed)
    push(state 11)
    ==
    lookup(11, '_UNDETERMINED_'): default reduction by rule 9
    executeAction(): of rule 9 ...
    ... action of rule 9 completed
    pop(1) from stack having size 8
    pop(): next state: 20, token: 'opnd'
    reduce(): by rule 9 to N-terminal 'opnd'
    ==
    lookup(20, 'opnd'): shift 25 ('opnd' processed)
    push(state 25)
    ==
    lookup(25, '_UNDETERMINED_'): default reduction by rule 6
    executeAction(): of rule 6 ...
    ... action of rule 6 completed
    pop(5) from stack having size 8
    pop(): next state: 6, token: 'instruction'
    reduce(): by rule 6 to N-terminal 'instruction'
    ==
    lookup(6, 'instruction'): shift 9 ('instruction' processed)
    push(state 9)
    ==
    lookup(9, '_UNDETERMINED_'): default reduction by rule 3
    executeAction(): of rule 3 ...
    ... action of rule 3 completed
    pop(3) from stack having size 4
    pop(): next state: 0, token: 'instruction_list'
    reduce(): by rule 3 to N-terminal 'instruction_list'
    ==
    lookup(0, 'instruction_list'): shift 2 ('instruction_list' processed)
    push(state 2)
    ==
    nextToken(): using '\x0a'
    lookup(2, '\x0a'): shift 6 ('\x0a' processed)
    push(state 6)
    ==
    nextToken(): using 'MNEMONIC'
    lookup(6, 'MNEMONIC'): default reduction by rule 7
    executeAction(): of rule 7 ...
    ... action of rule 7 completed
    pop(0) from stack having size 3
    pop(): next state: 6, token: 'optional_label'
    reduce(): by rule 7 to N-terminal 'optional_label'
    ==
    lookup(6, 'optional_label'): shift 4 ('optional_label' processed)
    push(state 4)
    ==
    lookup(4, 'MNEMONIC'): shift 7 ('MNEMONIC' processed)
    push(state 7)
    ==
    nextToken(): using 'REGISTER'
    lookup(7, 'REGISTER'): shift 13 ('REGISTER' processed)
    push(state 13)
    ==
    lookup(13, '_UNDETERMINED_'): default reduction by rule 11
    executeAction(): of rule 11 ...
    ... action of rule 11 completed
    pop(1) from stack having size 6
    pop(): next state: 7, token: 'register_exp'
    reduce(): by rule 11 to N-terminal 'register_exp'
    ==
    lookup(7, 'register_exp'): shift 11 ('register_exp' processed)
    push(state 11)
    ==
    lookup(11, '_UNDETERMINED_'): default reduction by rule 9
    executeAction(): of rule 9 ...
    ... action of rule 9 completed
    pop(1) from stack having size 6
    pop(): next state: 7, token: 'opnd'
    reduce(): by rule 9 to N-terminal 'opnd'
    ==
    lookup(7, 'opnd'): shift 10 ('opnd' processed)
    push(state 10)
    ==
    nextToken(): using `,' (44)
    lookup(10, `,' (44)): shift 20 (`,' (44) processed)
    push(state 20)
    ==
    nextToken(): using 'NUMBER'
    lookup(20, 'NUMBER'): shift 15 ('NUMBER' processed)
    push(state 15)
    ==
    nextToken(): using `(' (40)
    lookup(15, `(' (40)): shift 22 (`(' (40) processed)
    push(state 22)
    ==
    nextToken(): using 'REGISTER'
    lookup(22, 'REGISTER'): shift 27 ('REGISTER' processed)
    push(state 27)
    ==
    nextToken(): using `)' (41)
    lookup(27, `)' (41)): shift 30 (`)' (41) processed)
    push(state 30)
    ==
    lookup(30, '_UNDETERMINED_'): default reduction by rule 13
    executeAction(): of rule 13 ...
    ... action of rule 13 completed
    pop(4) from stack having size 11
    pop(): next state: 20, token: 'register_exp'
    reduce(): by rule 13 to N-terminal 'register_exp'
    ==
    lookup(20, 'register_exp'): shift 11 ('register_exp' processed)
    push(state 11)
    ==
    lookup(11, '_UNDETERMINED_'): default reduction by rule 9
    executeAction(): of rule 9 ...
    ... action of rule 9 completed
    pop(1) from stack having size 8
    pop(): next state: 20, token: 'opnd'
    reduce(): by rule 9 to N-terminal 'opnd'
    ==
    lookup(20, 'opnd'): shift 25 ('opnd' processed)
    push(state 25)
    ==
    lookup(25, '_UNDETERMINED_'): default reduction by rule 6
    executeAction(): of rule 6 ...
    ... action of rule 6 completed
    pop(5) from stack having size 8
    pop(): next state: 6, token: 'instruction'
    reduce(): by rule 6 to N-terminal 'instruction'
    ==
    lookup(6, 'instruction'): shift 9 ('instruction' processed)
    push(state 9)
    ==
    lookup(9, '_UNDETERMINED_'): default reduction by rule 3
    executeAction(): of rule 3 ...
    ... action of rule 3 completed
    pop(3) from stack having size 4
    pop(): next state: 0, token: 'instruction_list'
    reduce(): by rule 3 to N-terminal 'instruction_list'
    ==
    lookup(0, 'instruction_list'): shift 2 ('instruction_list' processed)
    push(state 2)
    ==
    nextToken(): using '\x0a'
    lookup(2, '\x0a'): shift 6 ('\x0a' processed)
    push(state 6)
    ==
    nextToken(): using 'MNEMONIC'
    lookup(6, 'MNEMONIC'): default reduction by rule 7
    executeAction(): of rule 7 ...
    ... action of rule 7 completed
    pop(0) from stack having size 3
    pop(): next state: 6, token: 'optional_label'
    reduce(): by rule 7 to N-terminal 'optional_label'
    ==
    lookup(6, 'optional_label'): shift 4 ('optional_label' processed)
    push(state 4)
    ==
    lookup(4, 'MNEMONIC'): shift 7 ('MNEMONIC' processed)
    push(state 7)
    ==
    nextToken(): using 'SYMBOL'
    lookup(7, 'SYMBOL'): shift 16 ('SYMBOL' processed)
    push(state 16)
    ==
    nextToken(): using `,' (44)
    lookup(16, `,' (44)): default reduction by rule 14
    executeAction(): of rule 14 ...
    ... action of rule 14 completed
    pop(1) from stack having size 6
    pop(): next state: 7, token: 'exp'
    reduce(): by rule 14 to N-terminal 'exp'
    ==
    lookup(7, 'exp'): shift 12 ('exp' processed)
    push(state 12)
    ==
    lookup(12, `,' (44)): default reduction by rule 10
    executeAction(): of rule 10 ...
    ... action of rule 10 completed
    pop(1) from stack having size 6
    pop(): next state: 7, token: 'opnd'
    reduce(): by rule 10 to N-terminal 'opnd'
    ==
    lookup(7, 'opnd'): shift 10 ('opnd' processed)
    push(state 10)
    ==
    lookup(10, `,' (44)): shift 20 (`,' (44) processed)
    push(state 20)
    ==
    nextToken(): using 'REGISTER'
    lookup(20, 'REGISTER'): shift 13 ('REGISTER' processed)
    push(state 13)
    ==
    lookup(13, '_UNDETERMINED_'): default reduction by rule 11
    executeAction(): of rule 11 ...
    ... action of rule 11 completed
    pop(1) from stack having size 8
    pop(): next state: 20, token: 'register_exp'
    reduce(): by rule 11 to N-terminal 'register_exp'
    ==
    lookup(20, 'register_exp'): shift 11 ('register_exp' processed)
    push(state 11)
    ==
    lookup(11, '_UNDETERMINED_'): default reduction by rule 9
    executeAction(): of rule 9 ...
    ... action of rule 9 completed
    pop(1) from stack having size 8
    pop(): next state: 20, token: 'opnd'
    reduce(): by rule 9 to N-terminal 'opnd'
    ==
    lookup(20, 'opnd'): shift 25 ('opnd' processed)
    push(state 25)
    ==
    lookup(25, '_UNDETERMINED_'): default reduction by rule 6
    executeAction(): of rule 6 ...
    ... action of rule 6 completed
    pop(5) from stack having size 8
    pop(): next state: 6, token: 'instruction'
    reduce(): by rule 6 to N-terminal 'instruction'
    ==
    lookup(6, 'instruction'): shift 9 ('instruction' processed)
    push(state 9)
    ==
    lookup(9, '_UNDETERMINED_'): default reduction by rule 3
    executeAction(): of rule 3 ...
    ... action of rule 3 completed
    pop(3) from stack having size 4
    pop(): next state: 0, token: 'instruction_list'
    reduce(): by rule 3 to N-terminal 'instruction_list'
    ==
    lookup(0, 'instruction_list'): shift 2 ('instruction_list' processed)
    push(state 2)
    ==
    nextToken(): using '\x0a'
    lookup(2, '\x0a'): shift 6 ('\x0a' processed)
    push(state 6)
    ==
    nextToken(): using 'MNEMONIC'
    lookup(6, 'MNEMONIC'): default reduction by rule 7
    executeAction(): of rule 7 ...
    ... action of rule 7 completed
    pop(0) from stack having size 3
    pop(): next state: 6, token: 'optional_label'
    reduce(): by rule 7 to N-terminal 'optional_label'
    ==
    lookup(6, 'optional_label'): shift 4 ('optional_label' processed)
    push(state 4)
    ==
    lookup(4, 'MNEMONIC'): shift 7 ('MNEMONIC' processed)
    push(state 7)
    ==
    nextToken(): using 'SYMBOL'
    lookup(7, 'SYMBOL'): shift 16 ('SYMBOL' processed)
    push(state 16)
    ==
    nextToken(): using `,' (44)
    lookup(16, `,' (44)): default reduction by rule 14
    executeAction(): of rule 14 ...
    ... action of rule 14 completed
    pop(1) from stack having size 6
    pop(): next state: 7, token: 'exp'
    reduce(): by rule 14 to N-terminal 'exp'
    ==
    lookup(7, 'exp'): shift 12 ('exp' processed)
    push(state 12)
    ==
    lookup(12, `,' (44)): default reduction by rule 10
    executeAction(): of rule 10 ...
    ... action of rule 10 completed
    pop(1) from stack having size 6
    pop(): next state: 7, token: 'opnd'
    reduce(): by rule 10 to N-terminal 'opnd'
    ==
    lookup(7, 'opnd'): shift 10 ('opnd' processed)
    push(state 10)
    ==
    lookup(10, `,' (44)): shift 20 (`,' (44) processed)
    push(state 20)
    ==
    nextToken(): using 'REGISTER'
    lookup(20, 'REGISTER'): shift 13 ('REGISTER' processed)
    push(state 13)
    ==
    lookup(13, '_UNDETERMINED_'): default reduction by rule 11
    executeAction(): of rule 11 ...
    ... action of rule 11 completed
    pop(1) from stack having size 8
    pop(): next state: 20, token: 'register_exp'
    reduce(): by rule 11 to N-terminal 'register_exp'
    ==
    lookup(20, 'register_exp'): shift 11 ('register_exp' processed)
    push(state 11)
    ==
    lookup(11, '_UNDETERMINED_'): default reduction by rule 9
    executeAction(): of rule 9 ...
    ... action of rule 9 completed
    pop(1) from stack having size 8
    pop(): next state: 20, token: 'opnd'
    reduce(): by rule 9 to N-terminal 'opnd'
    ==
    lookup(20, 'opnd'): shift 25 ('opnd' processed)
    push(state 25)
    ==
    lookup(25, '_UNDETERMINED_'): default reduction by rule 6
    executeAction(): of rule 6 ...
    ... action of rule 6 completed
    pop(5) from stack having size 8
    pop(): next state: 6, token: 'instruction'
    reduce(): by rule 6 to N-terminal 'instruction'
    ==
    lookup(6, 'instruction'): shift 9 ('instruction' processed)
    push(state 9)
    ==
    lookup(9, '_UNDETERMINED_'): default reduction by rule 3
    executeAction(): of rule 3 ...
    ... action of rule 3 completed
    pop(3) from stack having size 4
    pop(): next state: 0, token: 'instruction_list'
    reduce(): by rule 3 to N-terminal 'instruction_list'
    ==
    lookup(0, 'instruction_list'): shift 2 ('instruction_list' processed)
    push(state 2)
    ==
    nextToken(): using '\x0a'
    lookup(2, '\x0a'): shift 6 ('\x0a' processed)
    push(state 6)
    ==
    nextToken(): using 'MNEMONIC'
    lookup(6, 'MNEMONIC'): default reduction by rule 7
    executeAction(): of rule 7 ...
    ... action of rule 7 completed
    pop(0) from stack having size 3
    pop(): next state: 6, token: 'optional_label'
    reduce(): by rule 7 to N-terminal 'optional_label'
    ==
    lookup(6, 'optional_label'): shift 4 ('optional_label' processed)
    push(state 4)
    ==
    lookup(4, 'MNEMONIC'): shift 7 ('MNEMONIC' processed)
    push(state 7)
    ==
    nextToken(): using `(' (40)
    lookup(7, `(' (40)): shift 14 (`(' (40) processed)
    push(state 14)
    ==
    nextToken(): using 'REGISTER'
    lookup(14, 'REGISTER'): shift 21 ('REGISTER' processed)
    push(state 21)
    ==
    nextToken(): using `)' (41)
    lookup(21, `)' (41)): shift 26 (`)' (41) processed)
    push(state 26)
    ==
    lookup(26, '_UNDETERMINED_'): default reduction by rule 12
    executeAction(): of rule 12 ...
    ... action of rule 12 completed
    pop(3) from stack having size 8
    pop(): next state: 7, token: 'register_exp'
    reduce(): by rule 12 to N-terminal 'register_exp'
    ==
    lookup(7, 'register_exp'): shift 11 ('register_exp' processed)
    push(state 11)
    ==
    lookup(11, '_UNDETERMINED_'): default reduction by rule 9
    executeAction(): of rule 9 ...
    ... action of rule 9 completed
    pop(1) from stack having size 6
    pop(): next state: 7, token: 'opnd'
    reduce(): by rule 9 to N-terminal 'opnd'
    ==
    lookup(7, 'opnd'): shift 10 ('opnd' processed)
    push(state 10)
    ==
    nextToken(): using `,' (44)
    lookup(10, `,' (44)): shift 20 (`,' (44) processed)
    push(state 20)
    ==
    nextToken(): using 'REGISTER'
    lookup(20, 'REGISTER'): shift 13 ('REGISTER' processed)
    push(state 13)
    ==
    lookup(13, '_UNDETERMINED_'): default reduction by rule 11
    executeAction(): of rule 11 ...
    ... action of rule 11 completed
    pop(1) from stack having size 8
    pop(): next state: 20, token: 'register_exp'
    reduce(): by rule 11 to N-terminal 'register_exp'
    ==
    lookup(20, 'register_exp'): shift 11 ('register_exp' processed)
    push(state 11)
    ==
    lookup(11, '_UNDETERMINED_'): default reduction by rule 9
    executeAction(): of rule 9 ...
    ... action of rule 9 completed
    pop(1) from stack having size 8
    pop(): next state: 20, token: 'opnd'
    reduce(): by rule 9 to N-terminal 'opnd'
    ==
    lookup(20, 'opnd'): shift 25 ('opnd' processed)
    push(state 25)
    ==
    lookup(25, '_UNDETERMINED_'): default reduction by rule 6
    executeAction(): of rule 6 ...
    ... action of rule 6 completed
    pop(5) from stack having size 8
    pop(): next state: 6, token: 'instruction'
    reduce(): by rule 6 to N-terminal 'instruction'
    ==
    lookup(6, 'instruction'): shift 9 ('instruction' processed)
    push(state 9)
    ==
    lookup(9, '_UNDETERMINED_'): default reduction by rule 3
    executeAction(): of rule 3 ...
    ... action of rule 3 completed
    pop(3) from stack having size 4
    pop(): next state: 0, token: 'instruction_list'
    reduce(): by rule 3 to N-terminal 'instruction_list'
    ==
    lookup(0, 'instruction_list'): shift 2 ('instruction_list' processed)
    push(state 2)
    ==
    nextToken(): using '\x0a'
    lookup(2, '\x0a'): shift 6 ('\x0a' processed)
    push(state 6)
    ==
    nextToken(): using 'MNEMONIC'
    lookup(6, 'MNEMONIC'): default reduction by rule 7
    executeAction(): of rule 7 ...
    ... action of rule 7 completed
    pop(0) from stack having size 3
    pop(): next state: 6, token: 'optional_label'
    reduce(): by rule 7 to N-terminal 'optional_label'
    ==
    lookup(6, 'optional_label'): shift 4 ('optional_label' processed)
    push(state 4)
    ==
    lookup(4, 'MNEMONIC'): shift 7 ('MNEMONIC' processed)
    push(state 7)
    ==
    nextToken(): using 'REGISTER'
    lookup(7, 'REGISTER'): shift 13 ('REGISTER' processed)
    push(state 13)
    ==
    lookup(13, '_UNDETERMINED_'): default reduction by rule 11
    executeAction(): of rule 11 ...
    ... action of rule 11 completed
    pop(1) from stack having size 6
    pop(): next state: 7, token: 'register_exp'
    reduce(): by rule 11 to N-terminal 'register_exp'
    ==
    lookup(7, 'register_exp'): shift 11 ('register_exp' processed)
    push(state 11)
    ==
    lookup(11, '_UNDETERMINED_'): default reduction by rule 9
    executeAction(): of rule 9 ...
    ... action of rule 9 completed
    pop(1) from stack having size 6
    pop(): next state: 7, token: 'opnd'
    reduce(): by rule 9 to N-terminal 'opnd'
    ==
    lookup(7, 'opnd'): shift 10 ('opnd' processed)
    push(state 10)
    ==
    nextToken(): using `,' (44)
    lookup(10, `,' (44)): shift 20 (`,' (44) processed)
    push(state 20)
    ==
    nextToken(): using `(' (40)
    lookup(20, `(' (40)): shift 14 (`(' (40) processed)
    push(state 14)
    ==
    nextToken(): using 'REGISTER'
    lookup(14, 'REGISTER'): shift 21 ('REGISTER' processed)
    push(state 21)
    ==
    nextToken(): using `)' (41)
    lookup(21, `)' (41)): shift 26 (`)' (41) processed)
    push(state 26)
    ==
    lookup(26, '_UNDETERMINED_'): default reduction by rule 12
    executeAction(): of rule 12 ...
    ... action of rule 12 completed
    pop(3) from stack having size 10
    pop(): next state: 20, token: 'register_exp'
    reduce(): by rule 12 to N-terminal 'register_exp'
    ==
    lookup(20, 'register_exp'): shift 11 ('register_exp' processed)
    push(state 11)
    ==
    lookup(11, '_UNDETERMINED_'): default reduction by rule 9
    executeAction(): of rule 9 ...
    ... action of rule 9 completed
    pop(1) from stack having size 8
    pop(): next state: 20, token: 'opnd'
    reduce(): by rule 9 to N-terminal 'opnd'
    ==
    lookup(20, 'opnd'): shift 25 ('opnd' processed)
    push(state 25)
    ==
    lookup(25, '_UNDETERMINED_'): default reduction by rule 6
    executeAction(): of rule 6 ...
    ... action of rule 6 completed
    pop(5) from stack having size 8
    pop(): next state: 6, token: 'instruction'
    reduce(): by rule 6 to N-terminal 'instruction'
    ==
    lookup(6, 'instruction'): shift 9 ('instruction' processed)
    push(state 9)
    ==
    lookup(9, '_UNDETERMINED_'): default reduction by rule 3
    executeAction(): of rule 3 ...
    ... action of rule 3 completed
    pop(3) from stack having size 4
    pop(): next state: 0, token: 'instruction_list'
    reduce(): by rule 3 to N-terminal 'instruction_list'
    ==
    lookup(0, 'instruction_list'): shift 2 ('instruction_list' processed)
    push(state 2)
    ==
    nextToken(): using '\x0a'
    lookup(2, '\x0a'): shift 6 ('\x0a' processed)
    push(state 6)
    ==
    nextToken(): using 'MNEMONIC'
    lookup(6, 'MNEMONIC'): default reduction by rule 7
    executeAction(): of rule 7 ...
    ... action of rule 7 completed
    pop(0) from stack having size 3
    pop(): next state: 6, token: 'optional_label'
    reduce(): by rule 7 to N-terminal 'optional_label'
    ==
    lookup(6, 'optional_label'): shift 4 ('optional_label' processed)
    push(state 4)
    ==
    lookup(4, 'MNEMONIC'): shift 7 ('MNEMONIC' processed)
    push(state 7)
    ==
    nextToken(): using 'SYMBOL'
    lookup(7, 'SYMBOL'): shift 16 ('SYMBOL' processed)
    push(state 16)
    ==
    nextToken(): using `,' (44)
    lookup(16, `,' (44)): default reduction by rule 14
    executeAction(): of rule 14 ...
    ... action of rule 14 completed
    pop(1) from stack having size 6
    pop(): next state: 7, token: 'exp'
    reduce(): by rule 14 to N-terminal 'exp'
    ==
    lookup(7, 'exp'): shift 12 ('exp' processed)
    push(state 12)
    ==
    lookup(12, `,' (44)): default reduction by rule 10
    executeAction(): of rule 10 ...
    ... action of rule 10 completed
    pop(1) from stack having size 6
    pop(): next state: 7, token: 'opnd'
    reduce(): by rule 10 to N-terminal 'opnd'
    ==
    lookup(7, 'opnd'): shift 10 ('opnd' processed)
    push(state 10)
    ==
    lookup(10, `,' (44)): shift 20 (`,' (44) processed)
    push(state 20)
    ==
    nextToken(): using 'REGISTER'
    lookup(20, 'REGISTER'): shift 13 ('REGISTER' processed)
    push(state 13)
    ==
    lookup(13, '_UNDETERMINED_'): default reduction by rule 11
    executeAction(): of rule 11 ...
    ... action of rule 11 completed
    pop(1) from stack having size 8
    pop(): next state: 20, token: 'register_exp'
    reduce(): by rule 11 to N-terminal 'register_exp'
    ==
    lookup(20, 'register_exp'): shift 11 ('register_exp' processed)
    push(state 11)
    ==
    lookup(11, '_UNDETERMINED_'): default reduction by rule 9
    executeAction(): of rule 9 ...
    ... action of rule 9 completed
    pop(1) from stack having size 8
    pop(): next state: 20, token: 'opnd'
    reduce(): by rule 9 to N-terminal 'opnd'
    ==
    lookup(20, 'opnd'): shift 25 ('opnd' processed)
    push(state 25)
    ==
    lookup(25, '_UNDETERMINED_'): default reduction by rule 6
    executeAction(): of rule 6 ...
    ... action of rule 6 completed
    pop(5) from stack having size 8
    pop(): next state: 6, token: 'instruction'
    reduce(): by rule 6 to N-terminal 'instruction'
    ==
    lookup(6, 'instruction'): shift 9 ('instruction' processed)
    push(state 9)
    ==
    lookup(9, '_UNDETERMINED_'): default reduction by rule 3
    executeAction(): of rule 3 ...
    ... action of rule 3 completed
    pop(3) from stack having size 4
    pop(): next state: 0, token: 'instruction_list'
    reduce(): by rule 3 to N-terminal 'instruction_list'
    ==
    lookup(0, 'instruction_list'): shift 2 ('instruction_list' processed)
    push(state 2)
    ==
    nextToken(): using '\x0a'
    lookup(2, '\x0a'): shift 6 ('\x0a' processed)
    push(state 6)
    ==
    nextToken(): using 'MNEMONIC'
    lookup(6, 'MNEMONIC'): default reduction by rule 7
    executeAction(): of rule 7 ...
    ... action of rule 7 completed
    pop(0) from stack having size 3
    pop(): next state: 6, token: 'optional_label'
    reduce(): by rule 7 to N-terminal 'optional_label'
    ==
    lookup(6, 'optional_label'): shift 4 ('optional_label' processed)
    push(state 4)
    ==
    lookup(4, 'MNEMONIC'): shift 7 ('MNEMONIC' processed)
    push(state 7)
    ==
    nextToken(): using 'NUMBER'
    lookup(7, 'NUMBER'): shift 15 ('NUMBER' processed)
    push(state 15)
    ==
    nextToken(): using `(' (40)
    lookup(15, `(' (40)): shift 22 (`(' (40) processed)
    push(state 22)
    ==
    nextToken(): using 'REGISTER'
    lookup(22, 'REGISTER'): shift 27 ('REGISTER' processed)
    push(state 27)
    ==
    nextToken(): using `)' (41)
    lookup(27, `)' (41)): shift 30 (`)' (41) processed)
    push(state 30)
    ==
    lookup(30, '_UNDETERMINED_'): default reduction by rule 13
    executeAction(): of rule 13 ...
    ... action of rule 13 completed
    pop(4) from stack having size 9
    pop(): next state: 7, token: 'register_exp'
    reduce(): by rule 13 to N-terminal 'register_exp'
    ==
    lookup(7, 'register_exp'): shift 11 ('register_exp' processed)
    push(state 11)
    ==
    lookup(11, '_UNDETERMINED_'): default reduction by rule 9
    executeAction(): of rule 9 ...
    ... action of rule 9 completed
    pop(1) from stack having size 6
    pop(): next state: 7, token: 'opnd'
    reduce(): by rule 9 to N-terminal 'opnd'
    ==
    lookup(7, 'opnd'): shift 10 ('opnd' processed)
    push(state 10)
    ==
    nextToken(): using `,' (44)
    lookup(10, `,' (44)): shift 20 (`,' (44) processed)
    push(state 20)
    ==
    nextToken(): using 'REGISTER'
    lookup(20, 'REGISTER'): shift 13 ('REGISTER' processed)
    push(state 13)
    ==
    lookup(13, '_UNDETERMINED_'): default reduction by rule 11
    executeAction(): of rule 11 ...
    ... action of rule 11 completed
    pop(1) from stack having size 8
    pop(): next state: 20, token: 'register_exp'
    reduce(): by rule 11 to N-terminal 'register_exp'
    ==
    lookup(20, 'register_exp'): shift 11 ('register_exp' processed)
    push(state 11)
    ==
    lookup(11, '_UNDETERMINED_'): default reduction by rule 9
    executeAction(): of rule 9 ...
    ... action of rule 9 completed
    pop(1) from stack having size 8
    pop(): next state: 20, token: 'opnd'
    reduce(): by rule 9 to N-terminal 'opnd'
    ==
    lookup(20, 'opnd'): shift 25 ('opnd' processed)
    push(state 25)
    ==
    lookup(25, '_UNDETERMINED_'): default reduction by rule 6
    executeAction(): of rule 6 ...
    ... action of rule 6 completed
    pop(5) from stack having size 8
    pop(): next state: 6, token: 'instruction'
    reduce(): by rule 6 to N-terminal 'instruction'
    ==
    lookup(6, 'instruction'): shift 9 ('instruction' processed)
    push(state 9)
    ==
    lookup(9, '_UNDETERMINED_'): default reduction by rule 3
    executeAction(): of rule 3 ...
    ... action of rule 3 completed
    pop(3) from stack having size 4
    pop(): next state: 0, token: 'instruction_list'
    reduce(): by rule 3 to N-terminal 'instruction_list'
    ==
    lookup(0, 'instruction_list'): shift 2 ('instruction_list' processed)
    push(state 2)
    ==
    nextToken(): using '\x0a'
    lookup(2, '\x0a'): shift 6 ('\x0a' processed)
    push(state 6)
    ==
    nextToken(): using 'MNEMONIC'
    lookup(6, 'MNEMONIC'): default reduction by rule 7
    executeAction(): of rule 7 ...
    ... action of rule 7 completed
    pop(0) from stack having size 3
    pop(): next state: 6, token: 'optional_label'
    reduce(): by rule 7 to N-terminal 'optional_label'
    ==
    lookup(6, 'optional_label'): shift 4 ('optional_label' processed)
    push(state 4)
    ==
    lookup(4, 'MNEMONIC'): shift 7 ('MNEMONIC' processed)
    push(state 7)
    ==
    nextToken(): using 'REGISTER'
    lookup(7, 'REGISTER'): shift 13 ('REGISTER' processed)
    push(state 13)
    ==
    lookup(13, '_UNDETERMINED_'): default reduction by rule 11
    executeAction(): of rule 11 ...
    ... action of rule 11 completed
    pop(1) from stack having size 6
    pop(): next state: 7, token: 'register_exp'
    reduce(): by rule 11 to N-terminal 'register_exp'
    ==
    lookup(7, 'register_exp'): shift 11 ('register_exp' processed)
    push(state 11)
    ==
    lookup(11, '_UNDETERMINED_'): default reduction by rule 9
    executeAction(): of rule 9 ...
    ... action of rule 9 completed
    pop(1) from stack having size 6
    pop(): next state: 7, token: 'opnd'
    reduce(): by rule 9 to N-terminal 'opnd'
    ==
    lookup(7, 'opnd'): shift 10 ('opnd' processed)
    push(state 10)
    ==
    nextToken(): using `,' (44)
    lookup(10, `,' (44)): shift 20 (`,' (44) processed)
    push(state 20)
    ==
    nextToken(): using `(' (40)
    lookup(20, `(' (40)): shift 14 (`(' (40) processed)
    push(state 14)
    ==
    nextToken(): using 'REGISTER'
    lookup(14, 'REGISTER'): shift 21 ('REGISTER' processed)
    push(state 21)
    ==
    nextToken(): using `)' (41)
    lookup(21, `)' (41)): shift 26 (`)' (41) processed)
    push(state 26)
    ==
    lookup(26, '_UNDETERMINED_'): default reduction by rule 12
    executeAction(): of rule 12 ...
    ... action of rule 12 completed
    pop(3) from stack having size 10
    pop(): next state: 20, token: 'register_exp'
    reduce(): by rule 12 to N-terminal 'register_exp'
    ==
    lookup(20, 'register_exp'): shift 11 ('register_exp' processed)
    push(state 11)
    ==
    lookup(11, '_UNDETERMINED_'): default reduction by rule 9
    executeAction(): of rule 9 ...
    ... action of rule 9 completed
    pop(1) from stack having size 8
    pop(): next state: 20, token: 'opnd'
    reduce(): by rule 9 to N-terminal 'opnd'
    ==
    lookup(20, 'opnd'): shift 25 ('opnd' processed)
    push(state 25)
    ==
    lookup(25, '_UNDETERMINED_'): default reduction by rule 6
    executeAction(): of rule 6 ...
    ... action of rule 6 completed
    pop(5) from stack having size 8
    pop(): next state: 6, token: 'instruction'
    reduce(): by rule 6 to N-terminal 'instruction'
    ==
    lookup(6, 'instruction'): shift 9 ('instruction' processed)
    push(state 9)
    ==
    lookup(9, '_UNDETERMINED_'): default reduction by rule 3
    executeAction(): of rule 3 ...
    ... action of rule 3 completed
    pop(3) from stack having size 4
    pop(): next state: 0, token: 'instruction_list'
    reduce(): by rule 3 to N-terminal 'instruction_list'
    ==
    lookup(0, 'instruction_list'): shift 2 ('instruction_list' processed)
    push(state 2)
    ==
    nextToken(): using '\x0a'
    lookup(2, '\x0a'): shift 6 ('\x0a' processed)
    push(state 6)
    ==
    nextToken(): using 'MNEMONIC'
    lookup(6, 'MNEMONIC'): default reduction by rule 7
    executeAction(): of rule 7 ...
    ... action of rule 7 completed
    pop(0) from stack having size 3
    pop(): next state: 6, token: 'optional_label'
    reduce(): by rule 7 to N-terminal 'optional_label'
    ==
    lookup(6, 'optional_label'): shift 4 ('optional_label' processed)
    push(state 4)
    ==
    lookup(4, 'MNEMONIC'): shift 7 ('MNEMONIC' processed)
    push(state 7)
    ==
    nextToken(): using '\x0a'
    lookup(7, '\x0a'): default reduction by rule 4
    executeAction(): of rule 4 ...
    ... action of rule 4 completed
    pop(2) from stack having size 5
    pop(): next state: 6, token: 'instruction'
    reduce(): by rule 4 to N-terminal 'instruction'
    ==
    lookup(6, 'instruction'): shift 9 ('instruction' processed)
    push(state 9)
    ==
    lookup(9, '\x0a'): default reduction by rule 3
    executeAction(): of rule 3 ...
    ... action of rule 3 completed
    pop(3) from stack having size 4
    pop(): next state: 0, token: 'instruction_list'
    reduce(): by rule 3 to N-terminal 'instruction_list'
    ==
    lookup(0, 'instruction_list'): shift 2 ('instruction_list' processed)
    push(state 2)
    ==
    lookup(2, '\x0a'): shift 6 ('\x0a' processed)
    push(state 6)
    ==
    nextToken(): using 'MNEMONIC'
    lookup(6, 'MNEMONIC'): default reduction by rule 7
    executeAction(): of rule 7 ...
    ... action of rule 7 completed
    pop(0) from stack having size 3
    pop(): next state: 6, token: 'optional_label'
    reduce(): by rule 7 to N-terminal 'optional_label'
    ==
    lookup(6, 'optional_label'): shift 4 ('optional_label' processed)
    push(state 4)
    ==
    lookup(4, 'MNEMONIC'): shift 7 ('MNEMONIC' processed)
    push(state 7)
    ==
    nextToken(): using '_EOF_'
    lookup(7, '_EOF_'): default reduction by rule 4
    executeAction(): of rule 4 ...
    ... action of rule 4 completed
    pop(2) from stack having size 5
    pop(): next state: 6, token: 'instruction'
    reduce(): by rule 4 to N-terminal 'instruction'
    ==
    lookup(6, 'instruction'): shift 9 ('instruction' processed)
    push(state 9)
    ==
    lookup(9, '_EOF_'): default reduction by rule 3
    executeAction(): of rule 3 ...
    ... action of rule 3 completed
    pop(3) from stack having size 4
    pop(): next state: 0, token: 'instruction_list'
    reduce(): by rule 3 to N-terminal 'instruction_list'
    ==
    lookup(0, 'instruction_list'): shift 2 ('instruction_list' processed)
    push(state 2)
    ==
    lookup(2, '_EOF_'): default reduction by rule 1
    executeAction(): of rule 1 ...
    ... action of rule 1 completed
    pop(1) from stack having size 2
    pop(): next state: 0, token: 'program'
    reduce(): by rule 1 to N-terminal 'program'
    ==
    lookup(0, 'program'): shift 1 ('program' processed)
    push(state 1)
    ==
    lookup(1, '_EOF_'): ACCEPT
    ACCEPT(): Parsing successful
    parse(): returns 0
